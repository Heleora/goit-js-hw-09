{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAGE,MAAMC,EAAOC,SAASC,cAAc,SACXD,SAASC,cAAc,UA8BlD,SAASC,EAAcC,EAAUC,EAAOC,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAcC,OAAOT,IAAUS,OAAOV,GAAY,GAAKU,OAAOR,GAEpES,YAAW,KACLL,EAELF,EAAQ,C,SAAEJ,E,YAAUS,IAInBJ,EAAQ,C,SAAEL,E,YAAUS,GAAc,GAGpCA,EACC,G,CA5CLb,EAAKgB,iBAAiB,UAItB,SAAuBC,GACrBA,EAAIC,iBAEJ,MAAMC,EAAeF,EAAIG,cAAcC,SACjChB,EAAQc,EAAad,MAAMiB,MAC3BhB,EAAOa,EAAab,KAAKgB,MACzBC,EAASJ,EAAaI,OAAOD,MAEnC,IAAIE,EAAW,EAEf,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BtB,EAAcqB,EAAUnB,EAAOC,GAC9BoB,MAAK,EAACtB,SAAEA,EAAQS,YAAEA,MACjBc,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBzB,QAAiBS,MAAgB,IAE/EiB,OAAM,EAAC1B,SAAEA,EAAQS,YAAEA,MAClBc,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB3B,QAAeS,MAAgB,IAC3EW,GAAY,EAGdP,EAAIG,cAAcY,K","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\n\n  const form = document.querySelector(\".form\");\n  const createPromiseBtn = document.querySelector(\"button\");\n\n\nform.addEventListener(\"submit\", onFormSubmit);\n\n \n\nfunction onFormSubmit (evt) {\n  evt.preventDefault();\n\n  const formElements = evt.currentTarget.elements;\n  const delay = formElements.delay.value;\n  const step = formElements.step.value;\n  const amount = formElements.amount.value;\n\n  let position = 1;\n  \n  for (let i = 0; i < amount; i++) {\n    createPromise(position, delay, step)\n    .then(({ position, resultDelay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${resultDelay}ms`);\n    })\n    .catch(({ position, resultDelay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${resultDelay}ms`);});\n      position += 1;\n    }\n    \n    evt.currentTarget.reset;\n  }\n\nfunction createPromise(position, delay, step) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const resultDelay = Number(delay) + (Number(position) - 1) * Number(step);\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n     resolve({ position, resultDelay });\n    }\n    else {\n      // Reject\n      reject ({ position, resultDelay });\n    }\n  }\n  , resultDelay\n    )\n\n  })\n};\n\n\n// for (let i = 0; i < amount; i++) {\n//   createPromise(position, delay, step)\n//   .then(value => console.log(value)) \n//   .catch(error => console.log(error));\n//   position += 1;\n// }"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","step","Promise","resolve","reject","shouldResolve","Math","random","resultDelay","Number","setTimeout","addEventListener","evt","preventDefault","formElements","currentTarget","elements","value","amount","position1","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.c737463b.js.map"}